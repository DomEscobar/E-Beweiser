'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
var styledSystem = require('styled-system');
var css = _interopDefault(require('@styled-system/css'));
var useEvents = require('use-events');
var propTypes = require('prop-types');
var useOnClickOutside = _interopDefault(require('use-onclickoutside'));

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

var config = {
  roundedTop: {
    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],
    scale: 'radii'
  },
  roundedBottom: {
    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],
    scale: 'radii'
  },
  roundedLeft: {
    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],
    scale: 'radii'
  },
  roundedRight: {
    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],
    scale: 'radii'
  },
  roundedTopRight: {
    property: 'borderTopRightRadius',
    scale: 'radii'
  },
  roundedTopLeft: {
    property: 'borderTopLeftRadius',
    scale: 'radii'
  },
  roundedBottomRight: {
    property: 'borderBottomRightRadius',
    scale: 'radii'
  },
  roundedBottomLeft: {
    property: 'borderBottomLeftRadius',
    scale: 'radii'
  },
  rounded: {
    property: 'borderRadius',
    scale: 'radii'
  },
  d: {
    property: 'display'
  },
  w: {
    property: 'width',
    scale: 'sizes'
  },
  minW: {
    property: 'minWidth',
    scale: 'sizes'
  },
  maxW: {
    property: 'maxWidth',
    scale: 'sizes'
  },
  h: {
    property: 'height',
    scale: 'sizes'
  },
  minH: {
    property: 'minHeight',
    scale: 'sizes'
  },
  maxH: {
    property: 'maxHeight',
    scale: 'sizes'
  },
  bgImg: {
    property: 'backgroundImage'
  },
  bgSize: {
    property: 'backgroundSize'
  },
  bgPos: {
    property: 'backgroundPosition'
  },
  bgRepeat: {
    property: 'backgroundRepeat'
  },
  pos: {
    property: 'position'
  },
  flexDir: {
    property: 'flexDirection'
  },
  shadow: {
    property: 'boxShadow',
    scale: 'shadows'
  },
  textDecoration: true,
  overflowX: true,
  overflowY: true,
  textTransform: true,
  animation: true,
  appearance: true,
  transform: true,
  transformOrigin: true,
  visibility: true,
  whiteSpace: true,
  userSelect: true,
  pointerEvents: true,
  wordBreak: true,
  overflowWrap: true,
  textOverflow: true,
  boxSizing: true,
  cursor: true,
  resize: true,
  transition: true,
  listStyleType: true,
  listStylePosition: true,
  listStyleImage: true,
  fill: {
    property: 'fill',
    scale: 'colors'
  },
  stroke: {
    property: 'stroke',
    scale: 'colors'
  },
  objectFit: true,
  objectPosition: true,
  backgroundAttachment: true,
  outline: true
};
config.bgAttachment = config.backgroundAttachment;
config.textDecor = config.textDecoration;
config.listStylePos = config.listStylePosition;
config.listStyleImg = config.listStyleImage;
var extraConfig = /*#__PURE__*/styledSystem.system(config);

var transformAlias = function transformAlias(prop, propValue) {
  var configKeys = Object.keys(config);
  var result = {};

  if (configKeys.includes(prop)) {
    var _config$prop = config[prop],
        properties = _config$prop.properties,
        property = _config$prop.property;

    if (properties) {
      properties.forEach(function (_cssProp) {
        return result[_cssProp] = propValue;
      });
    }

    if (property) {
      result[property] = propValue;
    }

    if (config[prop] === true) {
      result[prop] = propValue;
    }
  } else {
    result[prop] = propValue;
  }

  return result;
};

var transformAliasProps = function transformAliasProps(props) {
  var result = {};

  for (var prop in props) {
    result = _objectSpread2({}, result, {}, transformAlias(prop, props[prop]));
  }

  return result;
};

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  ", ";\n  ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var systemProps = /*#__PURE__*/styledSystem.compose(styledSystem.layout, styledSystem.color, styledSystem.space, styledSystem.background, styledSystem.border, styledSystem.grid, styledSystem.position, styledSystem.shadow, styledSystem.typography, styledSystem.flexbox, styledSystem.textStyle, styledSystem.buttonStyle, styledSystem.colorStyle);
var StyledBox = /*#__PURE__*/styled__default.div( /*#__PURE__*/_templateObject(), systemProps, extraConfig);
var Box = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return React__default.createElement(StyledBox, Object.assign({
    ref: ref
  }, props));
});
Box.displayName = 'Box';

var hover = '&:hover';
var active = '&:active, &[data-active=true]';
var focus = '&:focus';
var visited = '&:visited';
var even = '&:nth-of-type(even)';
var odd = '&:nth-of-type(odd)';
var disabled = '&:disabled, &:disabled:focus, &:disabled:hover, &[aria-disabled=true], &[aria-disabled=true]:focus, &[aria-disabled=true]:hover';
var checked = '&[aria-checked=true]';
var mixed = '&[aria-checked=mixed]';
var selected = '&[aria-selected=true]';
var invalid = '&[aria-invalid=true]';
var pressed = '&[aria-pressed=true]';
var readOnly = '&[aria-readonly=true], &[readonly]';
var first = '&:first-of-type';
var last = '&:last-of-type';
var expanded = '&[aria-expanded=true]';
var grabbed = '&[aria-grabbed=true]';
var notFirst = '&:not(:first-of-type)';
var notLast = '&:not(:last-of-type)';
var groupHover = '[role=group]:hover &';
var PseudoBox = /*#__PURE__*/styled__default(StyledBox)(function (_ref) {
  var _css;

  var _after = _ref._after,
      _focus = _ref._focus,
      _selected = _ref._selected,
      _focusWithin = _ref._focusWithin,
      _hover = _ref._hover,
      _invalid = _ref._invalid,
      _active = _ref._active,
      _disabled = _ref._disabled,
      _grabbed = _ref._grabbed,
      _pressed = _ref._pressed,
      _expanded = _ref._expanded,
      _visited = _ref._visited,
      _before = _ref._before,
      _readOnly = _ref._readOnly,
      _first = _ref._first,
      _notFirst = _ref._notFirst,
      _notLast = _ref._notLast,
      _last = _ref._last,
      _placeholder = _ref._placeholder,
      _checked = _ref._checked,
      _groupHover = _ref._groupHover,
      _mixed = _ref._mixed,
      _odd = _ref._odd,
      _even = _ref._even;
  return css((_css = {}, _css[hover] = transformAliasProps(_hover), _css[focus] = transformAliasProps(_focus), _css[active] = transformAliasProps(_active), _css[visited] = transformAliasProps(_visited), _css[disabled] = transformAliasProps(_disabled), _css[selected] = transformAliasProps(_selected), _css[invalid] = transformAliasProps(_invalid), _css[expanded] = transformAliasProps(_expanded), _css[grabbed] = transformAliasProps(_grabbed), _css[readOnly] = transformAliasProps(_readOnly), _css[first] = transformAliasProps(_first), _css[notFirst] = transformAliasProps(_notFirst), _css[notLast] = transformAliasProps(_notLast), _css[last] = transformAliasProps(_last), _css[odd] = transformAliasProps(_odd), _css[even] = transformAliasProps(_even), _css[mixed] = transformAliasProps(_mixed), _css[checked] = transformAliasProps(_checked), _css[pressed] = transformAliasProps(_pressed), _css[groupHover] = transformAliasProps(_groupHover), _css['&:before'] = transformAliasProps(_before), _css['&:after'] = transformAliasProps(_after), _css['&:focus-within'] = transformAliasProps(_focusWithin), _css['&::placeholder'] = transformAliasProps(_placeholder), _css));
});
PseudoBox.displayName = 'PseudoBox';

var Flex = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var align = _ref.align,
      justify = _ref.justify,
      wrap = _ref.wrap,
      direction = _ref.direction,
      rest = _objectWithoutPropertiesLoose(_ref, ["align", "justify", "wrap", "direction"]);

  return React__default.createElement(Box, Object.assign({
    ref: ref,
    display: "flex",
    flexDirection: direction,
    alignItems: align,
    justifyContent: justify,
    flexWrap: wrap
  }, rest));
});
Flex.displayName = 'Flex';

var Grid = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var templateColumns = _ref.templateColumns,
      gap = _ref.gap,
      rowGap = _ref.rowGap,
      columnGap = _ref.columnGap,
      autoFlow = _ref.autoFlow,
      autoRows = _ref.autoRows,
      autoColumns = _ref.autoColumns,
      templateRows = _ref.templateRows,
      templateAreas = _ref.templateAreas,
      area = _ref.area,
      column = _ref.column,
      row = _ref.row,
      props = _objectWithoutPropertiesLoose(_ref, ["templateColumns", "gap", "rowGap", "columnGap", "autoFlow", "autoRows", "autoColumns", "templateRows", "templateAreas", "area", "column", "row"]);

  return React__default.createElement(Box, Object.assign({
    ref: ref,
    display: "grid",
    gridArea: area,
    gridTemplateAreas: templateAreas,
    gridGap: gap,
    gridRowGap: rowGap,
    gridColumnGap: columnGap,
    gridAutoColumns: autoColumns,
    gridColumn: column,
    gridRow: row,
    gridAutoFlow: autoFlow,
    gridAutoRows: autoRows,
    gridTemplateRows: templateRows,
    gridTemplateColumns: templateColumns
  }, props));
});
Grid.displayName = 'Grid';

var assumeTextStyle = function assumeTextStyle(as) {
  switch (as) {
    case 'h1':
      return 'display.large';

    case 'h2':
      return 'display.small';

    case 'h3':
      return 'body.large.medium';

    default:
      return undefined;
  }
};

var Text = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var textStyle = _ref.textStyle,
      _ref$as = _ref.as,
      as = _ref$as === void 0 ? 'span' : _ref$as,
      rest = _objectWithoutPropertiesLoose(_ref, ["textStyle", "as"]);

  return React__default.createElement(PseudoBox, Object.assign({
    ref: ref,
    as: as,
    whiteSpace: "unset",
    display: "inline",
    textStyle: textStyle || assumeTextStyle(as)
  }, rest));
});
Text.displayName = 'Text';

var colors = {
  transparent: 'transparent',
  current: 'currentColor',
  black: '#000000',
  white: '#ffffff',
  blue: /*#__PURE__*/Object.assign('#3700ff', {
    100: '#F2F2FF',
    200: '#E3E5FF',
    300: '#C5CCFF',
    400: '#AAB3FF',
    900: '#5548ff',
    hover: '#3100DC'
  }),
  ink: /*#__PURE__*/Object.assign('#0f1117', {
    50: '#f4f4f5',
    100: '#F9F9FC',
    150: '#F4F4F5',
    200: '#E7E7E8',
    250: '#C8C8CC',
    300: '#C8C8CC',
    400: '#A7A7AD',
    600: '#677282',
    900: '#27292E'
  }),
  darken: {
    50: 'rgba(15, 17, 23, 0.05)',
    100: 'rgba(15, 17, 23, 0.1)',
    150: 'rgba(15, 17, 23, 0.15)'
  },
  red: '#de0014',
  green: '#00a73e',
  orange: '#f7aa00',
  cyan: '#00d4ff',
  feedback: {}
};
colors.feedback = {
  error: colors.red,
  success: colors.green,
  warning: colors.orange,
  info: colors.cyan
};

var containers = {
  'screen-sm': '640px',
  'screen-md': '768px',
  'screen-lg': '1024px',
  'screen-xl': '1280px'
};
var baseSizes = {
  '0': '0px',
  px: '1px',
  '1': '4px',
  '2': '8px',
  '3': '12px',
  '4': '16px',
  '5': '20px',
  '6': '24px',
  '8': '32px',
  '10': '40px',
  '12': '48px',
  '16': '64px',
  '20': '80px',
  '24': '96px',
  '32': '128px',
  '40': '160px',
  '48': '192px',
  '56': '224px',
  '64': '256px'
};
var namedSpacingUnits = {
  none: baseSizes[0],
  'extra-tight': baseSizes[1],
  tight: baseSizes[2],
  'base-tight': baseSizes[3],
  base: baseSizes[4],
  'base-loose': baseSizes[5],
  loose: baseSizes[6],
  'extra-loose': baseSizes[8]
};
var sizes = /*#__PURE__*/_objectSpread2({}, baseSizes, {
  containers: containers
}, namedSpacingUnits);

var typography = {
  letterSpacings: {
    tighter: '-0.02em',
    tight: '-0.01em',
    normal: '0',
    wide: '0.025em',
    wider: '0.05em',
    widest: '0.1em'
  },
  lineHeights: {
    normal: 'normal',
    none: '1',
    shorter: '1.333',
    "short": '1.4',
    base: '1.5',
    tall: '1.625',
    taller: '2'
  },
  fontWeights: {
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900
  },
  fonts: {
    heading: '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    body: '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
  },
  fontSizes: [12, 14, 16, 20, 24, 28, 32, 36, 48, 64, 96, 128]
};
var textStyles = {
  display: {
    large: {
      fontWeight: typography.fontWeights.semibold,
      fontSize: typography.fontSizes[4],
      lineHeight: typography.lineHeights.shorter,
      letterSpacing: '-0.02em'
    },
    small: {
      fontWeight: typography.fontWeights.medium,
      fontSize: typography.fontSizes[3],
      lineHeight: typography.lineHeights["short"],
      letterSpacing: '-0.02em'
    }
  },
  body: {
    large: {
      fontWeight: typography.fontWeights.normal,
      fontSize: typography.fontSizes[2],
      lineHeight: typography.lineHeights.base,
      letterSpacing: '-0.01em'
    },
    small: {
      fontWeight: typography.fontWeights.normal,
      fontSize: typography.fontSizes[1],
      lineHeight: typography.lineHeights["short"],
      letterSpacing: '-0.01em'
    }
  },
  caption: {
    fontSize: typography.fontSizes[0],
    lineHeight: typography.lineHeights.shorter,
    letterSpacing: '0.00em'
  }
};
textStyles.body.large.medium = /*#__PURE__*/_objectSpread2({}, textStyles.body.large, {
  fontWeight: typography.fontWeights.medium
});
textStyles.body.small.medium = /*#__PURE__*/_objectSpread2({}, textStyles.body.small, {
  fontWeight: typography.fontWeights.medium
});
textStyles.caption.medium = /*#__PURE__*/_objectSpread2({}, textStyles.body.small, {
  fontWeight: typography.fontWeights.medium
});
var typography$1 = /*#__PURE__*/_objectSpread2({}, typography, {
  textStyles: textStyles
});

var space = sizes;
var shadows = {
  low: '0px 1px 2px rgba(0, 0, 0, 0.04)',
  mid: '0px 1px 2px rgba(27, 39, 51, 0.04), 0px 4px 8px rgba(27, 39, 51, 0.04)',
  high: '0px 8px 16px rgba(27, 39, 51, 0.08)',
  inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
  none: 'none',
  focus: '0 0 0 3px rgba(170, 179, 255, 0.75)',
  'button.secondary': '0px 1px 2px rgba(0, 0, 0, 0.08), 0px 1px 4px rgba(0, 0, 0, 0.08)'
};
var breakpoints = ['30em', '48em', '62em', '80em'];
breakpoints.sm = breakpoints[0];
breakpoints.md = breakpoints[1];
breakpoints.lg = breakpoints[2];
breakpoints.xl = breakpoints[3];
var zIndices = {
  hide: -1,
  auto: 'auto',
  '0': 0,
  '10': 10,
  '20': 20,
  '30': 30,
  '40': 40,
  '50': 50,
  '60': 60,
  '70': 70,
  '80': 80
};
var radii = {
  none: '0',
  sm: '0.125rem',
  md: '0.25rem',
  lg: '0.5rem',
  full: '9999px'
};
var opacity = {
  '0': '0',
  '20%': '0.2',
  '40%': '0.4',
  '60%': '0.6',
  '80%': '0.8',
  '100%': '1'
};
var borders = {
  none: 0,
  '1px': '1px solid',
  '2px': '2px solid',
  '4px': '4px solid'
};

var theme = /*#__PURE__*/_objectSpread2({
  breakpoints: breakpoints,
  zIndices: zIndices,
  radii: radii,
  opacity: opacity,
  borders: borders,
  colors: colors
}, typography$1, {
  sizes: sizes,
  shadows: shadows,
  space: space
});

var baseProps = {
  display: 'inline-flex',
  appearance: 'none',
  alignItems: 'center',
  justifyContent: 'center',
  transition: 'all 250ms',
  userSelect: 'none',
  position: 'relative',
  whiteSpace: 'nowrap',
  verticalAlign: 'middle',
  lineHeight: 'shorter',
  outline: 'none',
  border: '1px solid',
  borderColor: 'transparent'
};
var sizes$1 = {
  lg: {
    height: 12,
    minWidth: 9 * 14,
    fontSize: '14px !important',
    px: 5
  },
  md: {
    height: 10,
    minWidth: 10,
    fontSize: '14px !important',
    px: 4
  }
};
var unstyledStyle = {
  userSelect: 'inherit',
  bg: 'none',
  border: 0,
  color: 'inherit',
  display: 'inline',
  font: 'inherit',
  lineHeight: 'inherit',
  m: 0,
  p: 0,
  textAlign: 'inherit'
};

var linkVariantProps = function linkVariantProps() {
  return {
    p: 0,
    height: 'unset',
    lineHeight: 'normal',
    color: 'blue',
    minWidth: 'unset',
    _hover: {
      color: 'blue.hover',
      textDecoration: 'underline'
    },
    _active: {
      textDecoration: 'underline'
    },
    _focus: {
      textDecoration: 'underline'
    },
    _disabled: {
      color: '#A7A7AD'
    }
  };
};

var solidVariantProps = function solidVariantProps(_ref) {
  var mode = _ref.mode,
      customStyles = _ref.customStyles;
  var style = {
    primary: {
      bg: 'blue',
      color: 'white',
      _hover: {
        cursor: 'pointer'
      },
      _focus: {
        borderColor: 'blue.300',
        boxShadow: shadows.focus
      },
      _disabled: {
        bg: 'blue.200',
        cursor: 'not-allowed'
      }
    },
    secondary: {
      bg: 'white',
      color: 'blue',
      boxShadow: shadows['button.secondary'],
      _hover: {
        cursor: 'pointer',
        bg: 'white',
        boxShadow: shadows['button.secondary']
      },
      _focus: {
        borderColor: 'blue.300',
        boxShadow: shadows.focus
      },
      _disabled: {
        bg: 'white',
        pointerEvents: 'none',
        cursor: 'not-allowed',
        color: 'blue.300'
      }
    }
  };

  if (customStyles) {
    return customStyles[mode];
  }

  return style[mode];
};

var sizeProps = function sizeProps(_ref2) {
  var size = _ref2.size;
  return sizes$1[size];
};

var variantProps = function variantProps(props) {
  switch (props.variant) {
    case 'solid':
      return solidVariantProps(props);

    case 'link':
      return linkVariantProps();

    case 'unstyled':
      return unstyledStyle;

    default:
      return {};
  }
};

var useButtonStyle = function useButtonStyle(props) {
  return _objectSpread2({}, baseProps, {}, variantProps(props), {}, sizeProps(props));
};

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n  border: 0px;\n  clip: rect(0px, 0px, 0px, 0px);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0px;\n  overflow: hidden;\n  white-space: nowrap;\n  position: absolute;\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var VisuallyHidden = /*#__PURE__*/styled__default(Box)( /*#__PURE__*/_templateObject$1());

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  animation: ", " ", " linear infinite;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$2() {
  var data = _taggedTemplateLiteralLoose(["\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var spin = /*#__PURE__*/styled.keyframes( /*#__PURE__*/_templateObject$2());
var StyledBox$1 = /*#__PURE__*/styled__default(Box)( /*#__PURE__*/_templateObject2(), spin, function (props) {
  return props.speed;
});
var sizes$2 = {
  xs: '0.75rem',
  sm: '1rem',
  md: '1.5rem',
  lg: '2rem',
  xl: '3rem'
};
var Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? 'Loading...' : _ref$label,
      _ref$thickness = _ref.thickness,
      thickness = _ref$thickness === void 0 ? '2px' : _ref$thickness,
      _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? '0.85s' : _ref$speed,
      color = _ref.color,
      _ref$emptyColor = _ref.emptyColor,
      emptyColor = _ref$emptyColor === void 0 ? 'transparent' : _ref$emptyColor,
      props = _objectWithoutPropertiesLoose(_ref, ["size", "label", "thickness", "speed", "color", "emptyColor"]);

  var _size = sizes$2[size] || size;

  return React__default.createElement(StyledBox$1, Object.assign({
    ref: ref,
    display: "inline-block",
    borderWidth: thickness,
    borderColor: "currentColor",
    borderBottomColor: emptyColor,
    borderLeftColor: emptyColor,
    borderRadius: "100%",
    speed: speed,
    color: color,
    size: _size
  }, props), label && React__default.createElement(VisuallyHidden, null, label));
});
Spinner.displayName = 'Spinner';

var HoverChange = function HoverChange(_ref) {
  var isHovered = _ref.isHovered,
      isDisabled = _ref.isDisabled;
  return React__default.createElement(Box, {
    borderRadius: "6px",
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
    bg: "darken.150",
    opacity: !isDisabled && isHovered ? 1 : 0,
    zIndex: 1,
    transition: "all 250ms"
  });
};

var Button = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {
  var isDisabled = _ref2.isDisabled,
      isActive = _ref2.isActive,
      children = _ref2.children,
      _ref2$mode = _ref2.mode,
      mode = _ref2$mode === void 0 ? 'primary' : _ref2$mode,
      _ref2$variant = _ref2.variant,
      variant = _ref2$variant === void 0 ? 'solid' : _ref2$variant,
      type = _ref2.type,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? 'lg' : _ref2$size,
      isLoading = _ref2.isLoading,
      loadingText = _ref2.loadingText,
      customStyles = _ref2.customStyles,
      rest = _objectWithoutPropertiesLoose(_ref2, ["isDisabled", "isActive", "children", "as", "mode", "variant", "type", "size", "isLoading", "loadingText", "customStyles"]);

  var styles = useButtonStyle({
    variant: variant,
    mode: mode,
    size: size,
    customStyles: customStyles
  });

  var _useHover = useEvents.useHover(),
      hovered = _useHover[0],
      bind = _useHover[1];

  return React__default.createElement(PseudoBox, Object.assign({
    disabled: isDisabled,
    "aria-disabled": isDisabled,
    ref: ref,
    type: type,
    borderRadius: "6px",
    fontWeight: "medium",
    position: "relative",
    "data-active": isActive ? 'true' : undefined,
    as: 'button' 
  }, rest, styles, bind), React__default.createElement(Box, {
    as: "span",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    zIndex: 5
  }, isLoading && React__default.createElement(Spinner, {
    position: loadingText ? 'relative' : 'absolute',
    mr: loadingText ? 2 : 'unset',
    mx: !loadingText ? 'auto' : 'unset',
    color: "currentColor",
    size: "sm"
  }), isLoading ? loadingText || React__default.createElement(Box, {
    as: "span",
    opacity: 0
  }, children) : children), mode === 'secondary' ? null : React__default.createElement(HoverChange, {
    isDisabled: isDisabled || false,
    isHovered: hovered
  }));
});
Button.displayName = 'Button';

var ButtonGroup = function ButtonGroup(_ref) {
  var size = _ref.size,
      variantColor = _ref.variantColor,
      variant = _ref.variant,
      isAttached = _ref.isAttached,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["size", "variantColor", "variant", "isAttached", "spacing", "children"]);

  var clones = React.Children.map(children, function (child, index) {
    var isFirst = index === 0;
    var isLast = index === React.Children.count(children) - 1;

    if (!React__default.isValidElement(child)) {
      return null;
    }

    return React.cloneElement(child, _objectSpread2({
      size: size || child.props.size,
      variantColor: child.props.variantColor || variantColor,
      variant: child.props.variant || variant,
      _focus: {
        boxShadow: 'outline',
        zIndex: 1
      }
    }, !isLast && !isAttached && {
      mr: spacing
    }, {}, isFirst && isAttached && {
      roundedRight: 0
    }, {}, isLast && isAttached && {
      roundedLeft: 0
    }, {}, !isFirst && !isLast && isAttached && {
      rounded: 0
    }));
  });
  return React__default.createElement(Box, Object.assign({
    display: "inline-block"
  }, rest), clones);
};

ButtonGroup.displayName = 'ButtonGroup';

function _templateObject$3() {
  var data = _taggedTemplateLiteralLoose(["\n  /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n  /* Document\n   ========================================================================== */\n\n  /**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n  html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n\n  /* Sections\n   ========================================================================== */\n\n  /**\n * Remove the margin in all browsers.\n */\n\n  body {\n    margin: 0;\n  }\n\n  /**\n * Render the main element consistently in IE.\n */\n\n  main {\n    display: block;\n  }\n\n  /**\n * Correct the font size and margin on h1 elements within section and\n * article contexts in Chrome, Firefox, and Safari.\n */\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  /* Grouping content\n   ========================================================================== */\n\n  /**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n\n  /**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd em font sizing in all browsers.\n */\n\n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /* Text-level semantics\n   ========================================================================== */\n\n  /**\n * Remove the gray background on active links in IE 10.\n */\n\n  a {\n    background-color: transparent;\n  }\n\n  /**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted; /* 2 */\n  }\n\n  /**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd em font sizing in all browsers.\n */\n\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n * Add the correct font size in all browsers.\n */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n * Prevent sub and sup elements from affecting the line height in\n * all browsers.\n */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /* Embedded content\n   ========================================================================== */\n\n  /**\n * Remove the border on images inside links in IE 10.\n */\n\n  img {\n    border-style: none;\n  }\n\n  /* Forms\n   ========================================================================== */\n\n  /**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\n  button,\n  input {\n    /* 1 */\n    overflow: visible;\n  }\n\n  /**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n\n  /**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\n  /* button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n  } */\n\n  /**\n * Remove the inner border and padding in Firefox.\n */\n\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n * Restore the focus styles unset by the previous rule.\n */\n\n  /* button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  } */\n\n  /**\n * Correct the padding in Firefox.\n */\n\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n\n  /**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from fieldset elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    fieldset elements in all browsers.\n */\n\n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n\n  /**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\n  textarea {\n    overflow: auto;\n  }\n\n  /**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n  [type='checkbox'],\n  [type='radio'] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  /**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none !important;\n  }\n\n  /**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none !important;\n  }\n\n  /**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to inherit in Safari.\n */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /* Interactive\n   ========================================================================== */\n\n  /**\n  * Add the correct display in Edge, IE 10+, and Firefox.\n  */\n  details {\n    display: block;\n  }\n\n  /**\n * Add the correct display in all browsers.\n */\n\n  summary {\n    display: list-item;\n  }\n\n  /* Misc\n   ========================================================================== */\n\n  /**\n * Add the correct display in IE 10+.\n */\n\n  template {\n    display: none;\n  }\n\n  /**\n * Add the correct display in IE 10.\n */\n\n  [hidden] {\n    display: none !important;\n  }\n\n  /**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n  /**\n * 1. Prevent padding and border from affecting element width\n * https://goo.gl/pYtbK7\n * 2. Change the default font family in all browsers (opinionated)\n */\n\n  html {\n    box-sizing: border-box; /* 1 */\n    font-family: sans-serif; /* 2 */\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  /**\n * Removes the default spacing and border for appropriate elements.\n */\n\n  blockquote,\n  dl,\n  dd,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  hr,\n  figure,\n  p,\n  pre {\n    margin: 0;\n  }\n\n  button {\n    background: transparent;\n    padding: 0;\n  }\n\n  /**\n * Work around a Firefox/IE bug where the transparent button background\n * results in a loss of the default button focus styles.\n */\n\n  /* button:focus {\n    outline: 1px dotted;\n    outline: 5px auto -webkit-focus-ring-color;\n  } */\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n  }\n\n  ol,\n  ul {\n    /* list-style: none; */\n    margin: 0;\n    padding: 0;\n  }\n\n  /**\n * Tailwind custom reset styles\n */\n\n  /**\n * 1. Use the system font stack as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n * to override it to ensure consistency even when using the default theme.\n */\n\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,\n      'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; /* 1 */\n    line-height: 1.5; /* 2 */\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: 100%;\n    text-rendering: optimizelegibility;\n  }\n\n  /**\n * Ensure horizontal rules are visible by default\n */\n\n  hr {\n    border-top-width: 1px;\n  }\n\n  /**\n * Undo the border-style: none reset that Normalize applies to images so that\n * our border-{width} utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\n  img {\n    border-style: solid;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  button,\n  [role='button'] {\n    cursor: pointer;\n  }\n\n  button::-moz-focus-inner {\n    border: 0 !important;\n  }\n\n  table {\n    border-collapse: collapse;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n\n  /**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\n  a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  /**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    padding: 0;\n    line-height: inherit;\n    color: inherit;\n  }\n\n  /**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\n  pre,\n  code,\n  kbd,\n  samp {\n    font-family: Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\n  }\n\n  /**\n * Make replaced elements display: block by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with svg added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\n  img,\n  svg,\n  video,\n  canvas,\n  audio,\n  iframe,\n  embed,\n  object {\n    display: block;\n    vertical-align: middle;\n  }\n\n  /**\n * Constrain images and videos to the parent width and preserve\n * their instrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\n  img,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}
var tailwindPreflight = /*#__PURE__*/styled.css( /*#__PURE__*/_templateObject$3());

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    border-color: ", ";\n  }\n\n  input:-ms-input-placeholder,\n  textarea:-ms-input-placeholder {\n    color: ", ";\n  }\n\n  input::-ms-input-placeholder,\n  textarea::-ms-input-placeholder {\n    color: ", ";\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["", ""]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$4() {
  var data = _taggedTemplateLiteralLoose(["\n  ", ";\n\n  html {\n    line-height: 1.5;\n    color: ", ";\n    background-color: ", ";\n    font-family: ", ";\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    border-width: 0;\n    border-style: solid;\n    border-color: ", ";\n  }\n\n  input:-ms-input-placeholder,\n  textarea:-ms-input-placeholder {\n    color: ", ";\n  }\n\n  input::-ms-input-placeholder,\n  textarea::-ms-input-placeholder {\n    color: ", ";\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ", ";\n  }\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}

var defaultConfig = function defaultConfig(theme) {
  return {
    light: {
      color: theme.colors.ink[900],
      bg: undefined,
      borderColor: '#E5E5EC',
      placeholderColor: theme.colors.ink[400]
    },
    dark: {
      color: 'white',
      bg: theme.colors.ink[900],
      borderColor: theme.colors.ink[600],
      placeholderColor: theme.colors.ink[500]
    }
  };
};

var _defaultConfig$light = /*#__PURE__*/defaultConfig(theme).light,
    color = _defaultConfig$light.color,
    bg = _defaultConfig$light.bg,
    borderColor = _defaultConfig$light.borderColor,
    placeholderColor = _defaultConfig$light.placeholderColor;
var cssReset = /*#__PURE__*/styled.css( /*#__PURE__*/_templateObject$4(), tailwindPreflight, color, bg, theme && theme.fonts && theme.fonts.body, borderColor, placeholderColor, placeholderColor, placeholderColor);
var CSSReset = /*#__PURE__*/styled.createGlobalStyle( /*#__PURE__*/_templateObject2$1(), cssReset);
var ScopedCSSReset = /*#__PURE__*/styled__default.div( /*#__PURE__*/_templateObject3(), borderColor, placeholderColor, placeholderColor, placeholderColor);

var Svg = function Svg(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === void 0 ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === void 0 ? '0 0 24 24' : _ref$viewBox,
      _ref$fill = _ref.fill,
      fill = _ref$fill === void 0 ? 'none' : _ref$fill,
      rest = _objectWithoutPropertiesLoose(_ref, ["width", "height", "viewBox", "fill"]);

  return React.createElement(Box, Object.assign({
    as: "svg",
    width: width,
    height: height,
    viewBox: viewBox,
    fill: fill
  }, rest));
};

var AppsIcon = function AppsIcon(props) {
  return React__default.createElement(Svg, Object.assign({}, props), React__default.createElement("rect", {
    y: "1.02686",
    width: "10.0435",
    height: "9.88235",
    rx: "1.75",
    fill: "currentColor"
  }), React__default.createElement("path", {
    opacity: "0.8",
    d: "M13.5697 10.9091H22.2999C23.0625 10.9091 23.5444 10.0897 23.1739 9.42317L18.8088 1.57201C18.4277 0.886573 17.4419 0.886572 17.0608 1.572L12.6957 9.42316C12.3251 10.0897 12.8071 10.9091 13.5697 10.9091Z",
    fill: "currentColor"
  }), React__default.createElement("rect", {
    opacity: "0.64",
    y: "13.7327",
    width: "10.4348",
    height: "10.2674",
    rx: "5.13369",
    fill: "currentColor"
  }), React__default.createElement("path", {
    opacity: "0.4",
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.672 14.0339C14.4783 13.8498 14.2188 13.7479 13.9494 13.7502C13.68 13.7525 13.4224 13.8588 13.2319 14.0462C13.0414 14.2337 12.9334 14.4872 12.931 14.7523C12.9287 15.0173 13.0322 15.2726 13.2194 15.4633L16.4894 18.6809L13.2194 21.8984C13.0266 22.088 12.9182 22.3451 12.9182 22.6133C12.9181 22.746 12.9446 22.8775 12.9962 23.0002C13.0478 23.1229 13.1235 23.2344 13.2189 23.3283C13.3142 23.4222 13.4275 23.4967 13.5521 23.5476C13.6768 23.5984 13.8104 23.6246 13.9453 23.6247C14.2179 23.6248 14.4793 23.5183 14.672 23.3288L17.9421 20.1112L21.2121 23.3288C21.4049 23.5185 21.6663 23.625 21.9389 23.625C22.2116 23.625 22.473 23.5185 22.6658 23.3288C22.8585 23.1391 22.9668 22.8819 22.9668 22.6136C22.9668 22.3454 22.8585 22.0881 22.6658 21.8984L19.3957 18.6809L22.6658 15.4633C22.7612 15.3694 22.8368 15.2579 22.8884 15.1352C22.94 15.0125 22.9665 14.881 22.9665 14.7483C22.9664 14.6155 22.9398 14.484 22.8881 14.3614C22.8364 14.2387 22.7607 14.1273 22.6653 14.0334C22.5698 13.9396 22.4565 13.8651 22.3318 13.8144C22.2071 13.7636 22.0735 13.7375 21.9386 13.7375C21.8036 13.7376 21.67 13.7638 21.5454 13.8146C21.4207 13.8655 21.3075 13.94 21.2121 14.0339L17.9421 17.2515L14.672 14.0339Z",
    fill: "currentColor"
  }));
};

var BlockchainIcon = function BlockchainIcon(props) {
  var color = props.color || 'currentColor';
  return React.createElement(Svg, Object.assign({}, props), React.createElement("rect", {
    width: "12",
    height: "12",
    rx: "2.25",
    fill: color
  }), React.createElement("rect", {
    opacity: "0.6",
    x: "12",
    y: "12",
    width: "12",
    height: "12",
    rx: "2.25",
    fill: color
  }), React.createElement("rect", {
    opacity: "0.4",
    x: "14.75",
    y: "2.75",
    width: "6.5",
    height: "6.5",
    rx: "1",
    stroke: color,
    strokeWidth: "1.5",
    strokeLinejoin: "round"
  }), React.createElement("rect", {
    opacity: "0.4",
    x: "2.75",
    y: "14.75",
    width: "6.5",
    height: "6.5",
    rx: "1",
    stroke: color,
    strokeWidth: "1.5",
    strokeLinejoin: "round"
  }));
};

var BlockstackIcon = function BlockstackIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "12",
    height: "12",
    viewBox: "0 0 12 12",
    fill: "none"
  }, props), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0.148042 1.08513C-5.58794e-08 1.42724 -3.80998e-08 1.86349 0 2.736L1.42713e-07 6L2.85387e-07 9.264C3.23525e-07 10.1365 0 10.5728 0.148042 10.9149C0.329866 11.335 0.664964 11.6701 1.08513 11.852C1.42724 12 1.86349 12 2.736 12H6H9.264C10.1365 12 10.5728 12 10.9149 11.852C11.335 11.6701 11.6701 11.335 11.852 10.9149C12 10.5728 12 10.1365 12 9.264V6V2.736C12 1.86349 12 1.42724 11.852 1.08513C11.6701 0.664963 11.335 0.329865 10.9149 0.148041C10.5728 -6.70552e-08 10.1365 -3.80998e-08 9.264 0L6 1.42713e-07L2.736 2.85387e-07C1.86349 3.23525e-07 1.40625 2.90573e-07 1.08513 0.148042C0.664964 0.329867 0.329866 0.664963 0.148042 1.08513ZM7.91566 5.16965C7.31682 5.16965 6.83125 4.68409 6.83125 4.08511C6.83125 3.48644 7.31682 3.00088 7.91566 3.00088C8.5145 3.00088 9.00007 3.48644 9.00007 4.08511C9.00007 4.68409 8.5145 5.16965 7.91566 5.16965ZM5.16787 4.085C5.16787 4.68358 4.68253 5.16893 4.08382 5.16893C3.48541 5.16893 3.00007 4.68358 3.00007 4.085C3.00007 3.48643 3.48541 3.00107 4.08382 3.00107C4.68253 3.00107 5.16787 3.48643 5.16787 4.085ZM7.91576 6.83459C7.31679 6.83459 6.83123 7.32016 6.83123 7.919C6.83123 8.51785 7.31679 9.00342 7.91576 9.00342C8.51444 9.00342 9 8.51785 9 7.919C9 7.32016 8.51444 6.83459 7.91576 6.83459ZM4.08392 6.83565C4.68248 6.83565 5.16783 7.32098 5.16783 7.91969C5.16783 8.51809 4.68248 9.00342 4.08392 9.00342C3.48535 9.00342 3 8.51809 3 7.91969C3 7.32098 3.48535 6.83565 4.08392 6.83565Z",
    fill: props.color || 'currentColor'
  }));
};

var CheckmarkIcon = function CheckmarkIcon(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 72 : _ref$size,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      props = _objectWithoutPropertiesLoose(_ref, ["size", "color"]);

  return React.createElement(Svg, Object.assign({
    width: size,
    height: size,
    fill: "none",
    viewBox: "0 0 72 72"
  }, props), React.createElement("circle", {
    cx: "36",
    cy: "36",
    r: "34.5",
    fill: "#fff",
    stroke: color,
    strokeWidth: "3"
  }), React.createElement("path", {
    stroke: color,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "3",
    d: "M21 37l10 10 20-22"
  }));
};

var rotate = function rotate(direction) {
  if (direction === void 0) {
    direction = 'right';
  }

  switch (direction) {
    case 'left':
      return '90';

    case 'up':
      return '180';

    case 'right':
      return '270';

    case 'down':
      return 0;

    default:
      throw new Error('`rotate` must receive direction parameter');
  }
};

var ChevronIcon = function ChevronIcon(_ref) {
  var direction = _ref.direction,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 16 : _ref$size,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      props = _objectWithoutPropertiesLoose(_ref, ["direction", "size", "style"]);

  return React.createElement(Svg, Object.assign({
    width: size,
    height: size,
    viewBox: "0 0 16 16",
    style: _objectSpread2({}, style, {
      transform: "rotate(" + rotate(direction) + "deg)"
    })
  }, props), React.createElement("path", {
    fill: props.color || 'currentColor',
    d: "M4.7 7.367l3.3 3.3 3.3-3.3-.943-.943L8 8.78 5.643 6.424l-.943.943z"
  }));
};

var ConnectLogoIcon = function ConnectLogoIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      props = _objectWithoutPropertiesLoose(_ref, ["color"]);

  return React.createElement(Svg, Object.assign({
    color: color
  }, props), React.createElement("rect", {
    width: "24",
    height: "24",
    rx: "12",
    fill: "currentColor",
    opacity: "0.15"
  }), React.createElement("path", {
    d: "M15.2727 10.0179H14.8636V8.8125C14.8636 8.06658 14.5619 7.35121 14.0249 6.82376C13.4879 6.29632 12.7595 6 12 6C11.2405 6 10.5121 6.29632 9.9751 6.82376C9.43807 7.35121 9.13636 8.06658 9.13636 8.8125V10.0179H8.72727C8.40189 10.0182 8.08994 10.1453 7.85985 10.3713C7.62977 10.5973 7.50036 10.9036 7.5 11.2232V16.0446C7.50036 16.3642 7.62977 16.6706 7.85985 16.8966C8.08994 17.1225 8.40189 17.2497 8.72727 17.25H15.2727C15.5981 17.2497 15.9101 17.1225 16.1401 16.8966C16.3702 16.6706 16.4996 16.3642 16.5 16.0446V11.2232C16.4996 10.9036 16.3702 10.5973 16.1401 10.3713C15.9101 10.1453 15.5981 10.0182 15.2727 10.0179ZM9.95455 8.8125C9.95455 8.2797 10.17 7.76872 10.5536 7.39197C10.9372 7.01523 11.4575 6.80357 12 6.80357C12.5425 6.80357 13.0628 7.01523 13.4464 7.39197C13.83 7.76872 14.0455 8.2797 14.0455 8.8125V10.0179H9.95455V8.8125ZM12.4091 13.7231V14.6384C12.4091 14.745 12.366 14.8471 12.2893 14.9225C12.2126 14.9978 12.1085 15.0402 12 15.0402C11.8915 15.0402 11.7874 14.9978 11.7107 14.9225C11.634 14.8471 11.5909 14.745 11.5909 14.6384V13.7231C11.4349 13.6346 11.313 13.4981 11.2441 13.3347C11.1752 13.1712 11.1631 12.99 11.2097 12.8192C11.2563 12.6483 11.359 12.4973 11.5019 12.3896C11.6448 12.282 11.8199 12.2236 12 12.2236C12.1801 12.2236 12.3552 12.282 12.4981 12.3896C12.641 12.4973 12.7437 12.6483 12.7903 12.8192C12.8369 12.99 12.8248 13.1712 12.7559 13.3347C12.687 13.4981 12.5651 13.6346 12.4091 13.7231Z",
    fill: "currentColor"
  }), React.createElement("rect", {
    x: "10.5",
    y: "11.25",
    width: "3",
    height: "5.25",
    fill: "currentColor"
  }));
};

var EncryptionIcon = function EncryptionIcon(props) {
  return React.createElement(Svg, Object.assign({}, props), React.createElement("path", {
    d: "M18.5818 8.57143H17.7091V6C17.7091 4.4087 17.0655 2.88258 15.9198 1.75736C14.7741 0.632141 13.2202 0 11.6 0C9.97977 0 8.4259 0.632141 7.28022 1.75736C6.13454 2.88258 5.49091 4.4087 5.49091 6V8.57143H4.61818C3.92403 8.57218 3.25853 8.84334 2.76769 9.32541C2.27685 9.80748 2.00076 10.4611 2 11.1429V21.4286C2.00076 22.1103 2.27685 22.7639 2.76769 23.246C3.25853 23.7281 3.92403 23.9993 4.61818 24H18.5818C19.276 23.9993 19.9415 23.7281 20.4323 23.246C20.9231 22.7639 21.1992 22.1103 21.2 21.4286V11.1429C21.1992 10.4611 20.9231 9.80748 20.4323 9.32541C19.9415 8.84334 19.276 8.57218 18.5818 8.57143ZM7.23636 6C7.23636 4.86336 7.6961 3.77327 8.51444 2.96954C9.33278 2.16582 10.4427 1.71429 11.6 1.71429C12.7573 1.71429 13.8672 2.16582 14.6856 2.96954C15.5039 3.77327 15.9636 4.86336 15.9636 6V8.57143H7.23636V6Z",
    fill: "currentColor"
  }));
};

var ExclamationMarkIcon = function ExclamationMarkIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "12",
    height: "12",
    fill: "none",
    viewBox: "0 0 12 12"
  }, props), React.createElement("circle", {
    cx: "6",
    cy: "6",
    r: "6",
    fill: props.color || 'currentColor'
  }), React.createElement("path", {
    fill: "#fff",
    d: "M6.62 3.64a.622.622 0 10-1.244 0l.083 2.983a.54.54 0 001.081 0l.08-2.984zM6 9c.368 0 .687-.31.69-.694A.7.7 0 006 7.617.69.69 0 006 9z"
  }));
};

var EyeIcon = function EyeIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "24",
    height: "20",
    viewBox: "0 0 24 20"
  }, props), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.695 0.351482C19.9032 0.135371 20.1868 0.00948757 20.4855 0.000511017C20.7171 -0.00642408 20.9454 0.057366 21.1405 0.183512C21.3356 0.309658 21.4883 0.492283 21.5786 0.707441C21.669 0.922599 21.6927 1.16026 21.6468 1.38926C21.6008 1.61827 21.4873 1.82793 21.3212 1.99078L4.3048 19.1469C4.19867 19.2575 4.07178 19.3456 3.93152 19.4062C3.79125 19.4668 3.64043 19.4987 3.48783 19.5C3.33523 19.5012 3.1839 19.4718 3.04268 19.4135C2.90146 19.3552 2.77316 19.2691 2.66526 19.1603C2.55735 19.0515 2.47201 18.9222 2.4142 18.7798C2.35639 18.6374 2.32727 18.4849 2.32854 18.331C2.3298 18.1771 2.36143 18.0251 2.42157 17.8837C2.48171 17.7423 2.56917 17.6143 2.67885 17.5074L19.695 0.351482ZM0.193655 8.95376C2.47935 4.5123 7.03523 1.71636 11.9982 1.71636C13.5143 1.71601 14.9919 1.97725 16.3789 2.46512L14.7583 4.09901C13.9263 3.68538 12.9904 3.45188 12 3.45188C8.55044 3.45188 5.754 6.27118 5.75403 9.74917C5.75404 10.7476 5.98562 11.6913 6.39588 12.5301L3.92169 15.0246C2.39514 13.8491 1.11258 12.3359 0.194802 10.5571C-0.0645738 10.0547 -0.0649106 9.45653 0.193655 8.95376ZM17.6041 6.96802L20.0781 4.47375C21.6047 5.64932 22.8874 7.16248 23.8052 8.94153C24.0646 9.44387 24.0649 10.042 23.8064 10.5448C21.5205 14.9863 16.9647 17.7818 12.0018 17.7818C10.4857 17.7821 9.00815 17.5209 7.62116 17.033L9.2415 15.3994C10.0735 15.813 11.0096 16.0465 12 16.0465C15.4496 16.0465 18.246 13.227 18.246 9.74917C18.246 8.75058 18.0145 7.80688 17.6041 6.96802ZM9.24284 6.96914C10.0042 6.20163 11.0022 5.81824 12 5.81824C12.3155 5.81824 12.6308 5.85684 12.9387 5.93349L8.2154 10.6956C7.89855 9.40286 8.24082 7.97945 9.24284 6.96914ZM11.0613 13.5647L15.7846 8.80249C16.1013 10.0952 15.7589 11.5184 14.7569 12.5285C13.755 13.5388 12.3434 13.8839 11.0613 13.5647Z",
    fill: props.color || 'currentColor'
  }), React.createElement("path", {
    d: "M19.6951 0.351482C19.9034 0.135371 20.1869 0.00948757 20.4856 0.000511017C20.7173 -0.00642408 20.9456 0.057366 21.1406 0.183512C21.3357 0.309658 21.4884 0.492283 21.5787 0.707441C21.6691 0.922599 21.6928 1.16026 21.6469 1.38926C21.6009 1.61827 21.4874 1.82793 21.3213 1.99078L4.30491 19.1469C4.19879 19.2575 4.07189 19.3456 3.93163 19.4062C3.79137 19.4668 3.64054 19.4987 3.48794 19.5C3.33534 19.5012 3.18402 19.4718 3.0428 19.4135C2.90157 19.3552 2.77327 19.2691 2.66537 19.1603C2.55747 19.0515 2.47213 18.9222 2.41432 18.7798C2.35651 18.6374 2.32739 18.4849 2.32865 18.331C2.32992 18.1771 2.36154 18.0251 2.42169 17.8837C2.48183 17.7423 2.56929 17.6143 2.67896 17.5074L19.6951 0.351482Z",
    fill: props.color || 'currentColor'
  }));
};

var PadlockIcon = function PadlockIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "64",
    height: "64",
    fill: "none",
    viewBox: "0 0 64 64"
  }, props), React.createElement("path", {
    d: "M0 25.6C0 16.6392 0 12.1587 1.7439 8.73615C3.27787 5.72556 5.72556 3.27787 8.73615 1.7439C12.1587 0 16.6392 0 25.6 0L38.4 0C47.3608 0 51.8413 0 55.2638 1.7439C58.2744 3.27787 60.7221 5.72556 62.2561 8.73615C64 12.1587 64 16.6392 64 25.6V38.4C64 47.3608 64 51.8413 62.2561 55.2638C60.7221 58.2744 58.2744 60.7221 55.2638 62.2561C51.8413 64 47.3608 64 38.4 64H25.6C16.6392 64 12.1587 64 8.73615 62.2561C5.72556 60.7221 3.27787 58.2744 1.7439 55.2638C0 51.8413 0 47.3608 0 38.4L0 25.6Z",
    fill: "currentColor",
    opacity: "0.15"
  }), React.createElement("path", {
    d: "M40.7273 26.7143H39.6364V23.5C39.6364 21.5109 38.8318 19.6032 37.3997 18.1967C35.9676 16.7902 34.0253 16 32 16C29.9747 16 28.0324 16.7902 26.6003 18.1967C25.1682 19.6032 24.3636 21.5109 24.3636 23.5V26.7143H23.2727C22.405 26.7152 21.5732 27.0542 20.9596 27.6568C20.3461 28.2594 20.001 29.0764 20 29.9286V42.7857C20.001 43.6379 20.3461 44.4549 20.9596 45.0575C21.5732 45.6601 22.405 45.9991 23.2727 46H40.7273C41.595 45.9991 42.4268 45.6601 43.0404 45.0575C43.6539 44.4549 43.999 43.6379 44 42.7857V29.9286C43.999 29.0764 43.6539 28.2594 43.0404 27.6568C42.4268 27.0542 41.595 26.7152 40.7273 26.7143ZM26.5455 23.5C26.5455 22.0792 27.1201 20.7166 28.1431 19.7119C29.166 18.7073 30.5534 18.1429 32 18.1429C33.4466 18.1429 34.834 18.7073 35.8569 19.7119C36.8799 20.7166 37.4545 22.0792 37.4545 23.5V26.7143H26.5455V23.5Z",
    fill: "currentColor"
  }));
};

var PlusCircleIcon = function PlusCircleIcon(props) {
  return React.createElement(Svg, Object.assign({}, props), React.createElement("circle", {
    cx: "12",
    cy: "12",
    r: "12",
    fill: "currentColor"
  }), React.createElement("g", {
    clipPath: "url(#clip0)"
  }, React.createElement("path", {
    fill: "#fff",
    fillRule: "evenodd",
    d: "M8.36 11.25a.75.75 0 000 1.5h3.375v3.376a.75.75 0 001.5 0V12.75h3.377a.75.75 0 000-1.5h-3.376V7.874a.75.75 0 10-1.5 0v3.376H8.358z",
    clipRule: "evenodd"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: "clip0"
  }, React.createElement("path", {
    fill: "#fff",
    d: "M4 12H16V24H4z",
    transform: "rotate(-45 4 12)"
  }))));
};

var PrivateIcon = function PrivateIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "18",
    height: "24",
    viewBox: "0 0 18 24",
    fill: "none"
  }, props), React.createElement("path", {
    d: "M15.5455 8.57143H14.7273V6C14.7273 4.4087 14.1239 2.88258 13.0498 1.75736C11.9757 0.632141 10.519 0 9 0C7.48103 0 6.02428 0.632141 4.95021 1.75736C3.87614 2.88258 3.27273 4.4087 3.27273 6V8.57143H2.45455C1.80378 8.57218 1.17987 8.84334 0.719709 9.32541C0.259547 9.80748 0.000714665 10.4611 0 11.1429V21.4286C0.000714665 22.1103 0.259547 22.7639 0.719709 23.246C1.17987 23.7281 1.80378 23.9993 2.45455 24H15.5455C16.1962 23.9993 16.8201 23.7281 17.2803 23.246C17.7405 22.7639 17.9993 22.1103 18 21.4286V11.1429C17.9993 10.4611 17.7405 9.80748 17.2803 9.32541C16.8201 8.84334 16.1962 8.57218 15.5455 8.57143ZM4.90909 6C4.90909 4.86336 5.3401 3.77327 6.10729 2.96954C6.87449 2.16582 7.91502 1.71429 9 1.71429C10.085 1.71429 11.1255 2.16582 11.8927 2.96954C12.6599 3.77327 13.0909 4.86336 13.0909 6V8.57143H4.90909V6Z",
    fill: "currentColor"
  }));
};

var UnionLineIcon = function UnionLineIcon(props) {
  return React.createElement(Svg, Object.assign({
    width: "32",
    height: "7",
    fill: "none",
    viewBox: "0 0 32 7"
  }, props), React.createElement("mask", {
    id: "a",
    width: "32",
    height: "7",
    x: "0",
    y: "0",
    fill: "#000",
    maskUnits: "userSpaceOnUse"
  }, React.createElement("path", {
    fill: "#fff",
    d: "M0 0H32V7H0z"
  }), React.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 5a1.5 1.5 0 001.415-1h22.17a1.5 1.5 0 100-1H4.915A1.5 1.5 0 103.5 5z",
    clipRule: "evenodd"
  })), React.createElement("path", {
    fill: "#677282",
    fillRule: "evenodd",
    d: "M3.5 5a1.5 1.5 0 001.415-1h22.17a1.5 1.5 0 100-1H4.915A1.5 1.5 0 103.5 5z",
    clipRule: "evenodd"
  }), React.createElement("path", {
    fill: "#fff",
    d: "M4.915 4V2H3.5L3.03 3.334 4.915 4zm22.17 0l1.886-.667L28.5 2h-1.415v2zm0-1v2H28.5l.471-1.333L27.085 3zM4.915 3l-1.886.666L3.5 5h1.415V3zm-1.886.334A.5.5 0 013.5 3v4a3.5 3.5 0 003.3-2.334L3.03 3.334zM27.085 2H4.915v4h22.17V2zM28.5 3a.5.5 0 01.471.333L25.2 4.667A3.5 3.5 0 0028.5 7V3zm-.5.5a.5.5 0 01.5-.5v4A3.5 3.5 0 0032 3.5h-4zm.5.5a.5.5 0 01-.5-.5h4A3.5 3.5 0 0028.5 0v4zm.471-.333A.5.5 0 0128.5 4V0a3.5 3.5 0 00-3.3 2.333l3.771 1.333zM4.915 5h22.17V1H4.915v4zM3.5 4a.5.5 0 01-.471-.334L6.8 2.334A3.5 3.5 0 003.5 0v4zm.5-.5a.5.5 0 01-.5.5V0A3.5 3.5 0 000 3.5h4zM3.5 3a.5.5 0 01.5.5H0A3.5 3.5 0 003.5 7V3z",
    mask: "url(#a)"
  }));
};

var FormControlContext = /*#__PURE__*/React.createContext({});
var useFormControlContext = function useFormControlContext() {
  return React.useContext(FormControlContext);
};
var useFormControl = function useFormControl(props) {
  var context = useFormControlContext();

  if (!context) {
    return props;
  }

  var keys = Object.keys(context);
  return keys.reduce(function (acc, prop) {
    acc[prop] = props[prop];

    if (context) {
      if (props[prop] == null) {
        acc[prop] = context[prop];
      }
    }

    return acc;
  }, {});
};
var FormControl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var isInvalid = _ref.isInvalid,
      isRequired = _ref.isRequired,
      isDisabled = _ref.isDisabled,
      isReadOnly = _ref.isReadOnly,
      rest = _objectWithoutPropertiesLoose(_ref, ["isInvalid", "isRequired", "isDisabled", "isReadOnly"]);

  var context = {
    isRequired: isRequired,
    isDisabled: isDisabled,
    isInvalid: isInvalid,
    isReadOnly: isReadOnly
  };
  return React__default.createElement(FormControlContext.Provider, {
    value: context
  }, React__default.createElement(Box, Object.assign({
    role: "group",
    ref: ref
  }, rest)));
});
FormControl.displayName = 'FormControl';

var defaultStyle = {
  height: 12,
  border: '1px solid',
  borderBottomColor: 'inherit',
  borderLeftColor: 'inherit',
  borderRightColor: 'inherit',
  borderTopColor: 'inherit',
  borderColor: 'inherit',
  bg: 'white',
  _hover: {
    borderBottomColor: 'ink.300',
    borderLeftColor: 'ink.300',
    borderRightColor: 'ink.300',
    borderTopColor: 'ink.300',
    borderColor: 'ink.300'
  },
  _disabled: {
    bg: '#f9f9fc',
    cursor: 'not-allowed',
    pointerEvents: 'none'
  },
  _focus: {
    borderBottomColor: 'blue.300',
    borderLeftColor: 'blue.300',
    borderRightColor: 'blue.300',
    borderTopColor: 'blue.300',
    borderColor: 'blue.300',
    boxShadow: '0 0 0 1px rgba(170, 179, 255, 0.75)'
  },
  _invalid: {
    borderBottomColor: 'red',
    borderLeftColor: 'red',
    borderRightColor: 'red',
    borderTopColor: 'red',
    borderColor: 'red'
  }
};
var baseProps$1 = {
  display: 'flex',
  alignItems: 'center',
  position: 'relative',
  transition: 'all 0.2s',
  outline: 'none',
  borderRadius: '6px',
  p: '14px 16px'
};
var inputSizes = {
  "default": {
    fontSize: 'body.small',
    height: '12',
    lineHeight: 'base'
  }
};

var useInputStyle = function useInputStyle(props) {
  return _objectSpread2({
    width: props.isFullWidth ? '100%' : undefined
  }, baseProps$1, {}, defaultStyle);
};

var Input = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var as = props.as,
      ariaLabel = props['aria-label'],
      ariaDescribedby = props['aria-describedby'],
      isReadOnly = props.isReadOnly,
      rest = _objectWithoutPropertiesLoose(props, ["as", "aria-label", "aria-describedby", "isReadOnly"]);

  var inputStyleProps = useInputStyle(props);
  var formControl = useFormControl(props);
  return React__default.createElement(PseudoBox, Object.assign({
    ref: ref,
    as: as,
    _readOnly: formControl.isReadOnly,
    "aria-readonly": isReadOnly,
    isDisabled: formControl.isDisabled,
    "aria-label": ariaLabel,
    "aria-invalid": formControl.isInvalid,
    isRequired: formControl.isRequired,
    "aria-required": formControl.isRequired,
    "aria-disabled": formControl.isDisabled,
    "aria-describedby": ariaDescribedby,
    textStyle: "body.small"
  }, inputStyleProps, rest));
});
Input.defaultProps = {
  as: 'input',
  isFullWidth: true,
  focusBorderColor: 'blue.300'
};
Input.displayName = 'Input';

var InputElement = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _placementProp;

  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      children = _ref.children,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'left' : _ref$placement,
      _ref$disablePointerEv = _ref.disablePointerEvents,
      disablePointerEvents = _ref$disablePointerEv === void 0 ? false : _ref$disablePointerEv,
      props = _objectWithoutPropertiesLoose(_ref, ["size", "children", "placement", "disablePointerEvents"]);

  var height = inputSizes[size] && inputSizes[size].height;
  var fontSize = inputSizes[size] && inputSizes[size].fontSize;
  var placementProp = (_placementProp = {}, _placementProp[placement] = '0', _placementProp);
  return React__default.createElement(Box, Object.assign({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    height: height,
    width: height,
    fontSize: fontSize,
    top: "0",
    zIndex: 1,
    ref: ref
  }, disablePointerEvents && {
    pointerEvents: 'none'
  }, placementProp, props), children);
});
var InputLeftElement = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return React__default.createElement(InputElement, Object.assign({
    ref: ref,
    placement: "left"
  }, props));
});
var InputRightElement = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return React__default.createElement(InputElement, Object.assign({
    ref: ref,
    placement: "right"
  }, props));
});
InputElement.displayName = 'InputElement';
InputLeftElement.displayName = 'InputLeftElement';
InputRightElement.displayName = 'InputRightElement';

var ThemeContext = /*#__PURE__*/React__default.createContext(theme);

var ThemeProvider = function ThemeProvider(_ref) {
  var theme = _ref.theme,
      children = _ref.children;
  return React__default.createElement(styled.ThemeProvider, {
    theme: theme
  }, children);
};

ThemeProvider.defaultProps = {
  theme: theme
};

var useTheme = function useTheme() {
  var theme = React.useContext(ThemeContext);

  if (theme === undefined) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }

  return theme;
};

var InputGroup = function InputGroup(_ref) {
  var children = _ref.children,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "size"]);

  var _useTheme = useTheme(),
      sizes = _useTheme.sizes;

  var height = inputSizes[size] && inputSizes[size].height;
  var pl = null;
  var pr = null;
  return React__default.createElement(Box, Object.assign({
    display: "flex",
    position: "relative"
  }, props), React.Children.map(children, function (child) {
    if (!React__default.isValidElement(child)) {
      return null;
    }

    if (child.type === InputLeftElement) {
      pl = sizes[height];
    }

    if (child.type === InputRightElement) {
      pr = sizes[height];
    }

    if (child.type === Input) {
      return React.cloneElement(child, {
        width: '100%',
        pl: child.props.pl || pl,
        pr: child.props.pr || pr
      });
    }

    return React.cloneElement(child, {
      size: size
    });
  }));
};

var InputAddon = function InputAddon(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'left' : _ref$placement,
      props = _objectWithoutPropertiesLoose(_ref, ["placement"]);

  var _placement = {
    left: {
      mr: '-1px',
      roundedRight: 0,
      borderRightColor: 'transparent',
      borderLeftWidth: 0
    },
    right: {
      order: 1,
      roundedLeft: 0,
      borderLeftColor: 'transparent',
      borderLeftWidth: 0
    }
  };

  var styleProps = _objectSpread2({}, useInputStyle({
    variant: 'outline'
  }), {
    flex: '0 0 auto',
    whiteSpace: 'nowrap',
    bg: 'white',
    fontSize: 'body.small'
  }, _placement[placement]);

  return React__default.createElement(Box, Object.assign({}, styleProps, props, {
    css: {
      'input:focus + &': {
        zIndex: -1
      }
    }
  }));
};

 InputAddon.propTypes = {
  placement: /*#__PURE__*/propTypes.oneOf(['left', 'right'])
} ;
InputAddon.displayName = 'InputAddon';

var InputLeftAddon = function InputLeftAddon(props) {
  return React__default.createElement(InputAddon, Object.assign({
    placement: "left"
  }, props));
};

var InputRightAddon = function InputRightAddon(props) {
  return React__default.createElement(InputAddon, Object.assign({
    placement: "right"
  }, props));
};

var RequiredIndicator = function RequiredIndicator(props) {
  return React__default.createElement(Box, Object.assign({
    as: "span",
    ml: 1,
    color: "red",
    "aria-hidden": "true",
    children: "*"
  }, props));
};
var FormLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["children"]);

  var formControl = useFormControl(props);
  return React__default.createElement(Text, Object.assign({
    ref: ref,
    pb: "4px",
    opacity: formControl.isDisabled ? 0.4 : 1,
    textAlign: "left",
    verticalAlign: "middle",
    display: "inline-block",
    as: "label",
    textStyle: "body.small.medium"
  }, props), children, formControl.isRequired && React__default.createElement(RequiredIndicator, null));
});
FormLabel.displayName = 'FormLabel';

var ModalContext = /*#__PURE__*/React__default.createContext({
  isOpen: false
});
var useModalState = function useModalState() {
  return React__default.useContext(ModalContext);
};

var Header = function Header(_ref) {
  var component = _ref.component;
  return component ? React__default.createElement(Box, {
    borderTopRightRadius: "6px",
    borderTopLeftRadius: "6px"
  }, component) : null;
};

var Footer = function Footer(_ref2) {
  var component = _ref2.component;
  return component ? React__default.createElement(Box, {
    borderBottomRightRadius: "6px",
    borderBottomLeftRadius: "6px"
  }, component) : null;
};

var ModalUnderlay = function ModalUnderlay(_ref3) {
  var isOpen = _ref3.isOpen,
      noAnimation = _ref3.noAnimation;
  return React__default.createElement(Box, {
    position: "fixed",
    size: "100%",
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    bg: "rgba(0,0,0," + (isOpen ? '0.48' : '0') + ")",
    transition: noAnimation ? 'unset' : 'all 0.15s',
    zIndex: 99999,
    style: {
      userSelect: isOpen ? 'unset' : 'none',
      pointerEvents: isOpen ? 'unset' : 'none',
      willChange: 'background'
    }
  });
};

var ModalWrapper = function ModalWrapper(_ref4) {
  var isOpen = _ref4.isOpen,
      rest = _objectWithoutPropertiesLoose(_ref4, ["isOpen"]);

  return React__default.createElement(Flex, Object.assign({
    zIndex: 999999,
    position: "fixed",
    bottom: [0, 'unset'],
    width: "100%",
    top: 0,
    left: 0,
    height: "100%",
    maxHeight: ['100vh', 'unset'],
    alignItems: "center",
    justifyContent: ['flex-end', 'center'],
    flexDirection: "column",
    opacity: isOpen ? 1 : 0,
    style: {
      userSelect: isOpen ? 'unset' : 'none',
      pointerEvents: isOpen ? 'unset' : 'none'
    }
  }, rest));
};

var ModalCardContainer = /*#__PURE__*/React__default.forwardRef(function (_ref5, ref) {
  var noAnimation = _ref5.noAnimation,
      isOpen = _ref5.isOpen,
      rest = _objectWithoutPropertiesLoose(_ref5, ["noAnimation", "isOpen"]);

  return React__default.createElement(Flex, Object.assign({
    flexDirection: "column",
    position: "relative",
    bg: "white",
    mx: "auto",
    minWidth: ['100%', '396px'],
    maxWidth: ['100%', '396px'],
    maxHeight: ['100%', 'calc(100% - 48px)'],
    borderRadius: ['unset', '6px'],
    boxShadow: "high",
    transform: noAnimation ? 'translateY(0px)' : isOpen ? 'translateY(0px)' : 'translateY(15px)',
    transition: noAnimation ? 'unset' : 'all 0.2s ease-in-out',
    style: {
      willChange: 'transform'
    },
    ref: ref
  }, rest));
});
var Modal = function Modal(_ref6) {
  var _ref6$footerComponent = _ref6.footerComponent,
      FooterComponent = _ref6$footerComponent === void 0 ? null : _ref6$footerComponent,
      _ref6$headerComponent = _ref6.headerComponent,
      HeaderComponent = _ref6$headerComponent === void 0 ? null : _ref6$headerComponent,
      _ref6$isOpen = _ref6.isOpen,
      isOpen = _ref6$isOpen === void 0 ? false : _ref6$isOpen,
      children = _ref6.children,
      _ref6$noAnimation = _ref6.noAnimation,
      noAnimation = _ref6$noAnimation === void 0 ? false : _ref6$noAnimation,
      close = _ref6.close;

  var _useModalState = useModalState(),
      doCloseModal = _useModalState.doCloseModal;

  var ref = React__default.useRef(null);
  React__default.useEffect(function () {
    var func = function func(event) {
      if (event.key === 'Escape') {
        if (close) {
          close();
        } else if (doCloseModal) {
          doCloseModal();
        }
      }
    };

    if (isOpen) {
      typeof window !== 'undefined' && window.document && window.document.createElement && document.addEventListener('keydown', func);
    }

    return function () {
      typeof window !== 'undefined' && window.document && window.document.createElement && document.removeEventListener('keydown', func);
    };
  }, [isOpen, close]);
  useOnClickOutside(ref, close || doCloseModal || null);
  return React__default.createElement(React__default.Fragment, null, React__default.createElement(ModalUnderlay, {
    isOpen: isOpen,
    noAnimation: noAnimation
  }), React__default.createElement(ModalWrapper, {
    isOpen: isOpen
  }, React__default.createElement(ModalCardContainer, {
    ref: ref,
    isOpen: isOpen,
    noAnimation: noAnimation
  }, React__default.createElement(Header, {
    component: HeaderComponent
  }), React__default.createElement(Box, {
    overflowY: "auto"
  }, children), React__default.createElement(Footer, {
    component: FooterComponent
  }))));
};
var ModalProvider = function ModalProvider(props) {
  var _React$useState = React__default.useState(false),
      isOpen = _React$useState[0],
      setIsOpen = _React$useState[1];

  var doOpenModal = function doOpenModal() {
    return !isOpen ? setIsOpen(true) : null;
  };

  var doCloseModal = function doCloseModal() {
    return isOpen ? setIsOpen(true) : null;
  };

  return React__default.createElement(ModalContext.Provider, {
    value: {
      isOpen: isOpen,
      doOpenModal: doOpenModal,
      doCloseModal: doCloseModal
    }
  }, props.children);
};

var Stack = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var isInline = _ref.isInline,
      children = _ref.children,
      align = _ref.align,
      justify = _ref.justify,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,
      shouldWrapChildren = _ref.shouldWrapChildren,
      rest = _objectWithoutPropertiesLoose(_ref, ["isInline", "children", "align", "justify", "spacing", "shouldWrapChildren"]);

  var validChildren = Array.isArray(children) ? children.filter(React.isValidElement) : [];
  return React__default.createElement(Flex, Object.assign({
    align: align,
    justify: justify,
    flexDir: isInline ? 'row' : 'column',
    ref: ref
  }, rest), React.Children.map(validChildren, function (child, index) {
    if (!React.isValidElement(child)) {
      return null;
    }

    if (!Array.isArray(children)) {
      return null;
    }

    var isLastChild = validChildren.length === index + 1;
    var spacingProps = isInline ? {
      mr: isLastChild ? undefined : spacing
    } : {
      mb: isLastChild ? undefined : spacing
    };

    if (shouldWrapChildren) {
      return React__default.createElement(Box, Object.assign({
        d: "inline-block"
      }, spacingProps), child);
    }

    return React.cloneElement(child, spacingProps);
  }));
});
Stack.displayName = 'Stack';

var copyToClipboard = function copyToClipboard(value) {
  var el = document.createElement('textarea');
  el.value = value;
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  var curSelection = document.getSelection();
  var selected = curSelection && curSelection.rangeCount > 0 ? curSelection.getRangeAt(0) : false;
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);

  if (selected) {
    var _document$getSelectio, _document$getSelectio2;

    (_document$getSelectio = document.getSelection()) === null || _document$getSelectio === void 0 ? void 0 : _document$getSelectio.removeAllRanges();
    (_document$getSelectio2 = document.getSelection()) === null || _document$getSelectio2 === void 0 ? void 0 : _document$getSelectio2.addRange(selected);
  }
};

function useClipboard(value) {
  var _useState = React.useState(false),
      hasCopied = _useState[0],
      setHasCopied = _useState[1];

  var onCopy = function onCopy() {
    copyToClipboard(value);
    setHasCopied(true);
    setTimeout(function () {
      return setHasCopied(false);
    }, 1500);
  };

  return {
    value: value,
    onCopy: onCopy,
    hasCopied: hasCopied
  };
}

exports.AppsIcon = AppsIcon;
exports.BlockchainIcon = BlockchainIcon;
exports.BlockstackIcon = BlockstackIcon;
exports.Box = Box;
exports.Button = Button;
exports.ButtonGroup = ButtonGroup;
exports.CSSReset = CSSReset;
exports.CheckmarkIcon = CheckmarkIcon;
exports.ChevronIcon = ChevronIcon;
exports.ConnectLogoIcon = ConnectLogoIcon;
exports.EncryptionIcon = EncryptionIcon;
exports.ExclamationMarkIcon = ExclamationMarkIcon;
exports.EyeIcon = EyeIcon;
exports.Flex = Flex;
exports.FormControl = FormControl;
exports.FormLabel = FormLabel;
exports.Grid = Grid;
exports.Input = Input;
exports.InputAddon = InputAddon;
exports.InputElement = InputElement;
exports.InputGroup = InputGroup;
exports.InputLeftAddon = InputLeftAddon;
exports.InputLeftElement = InputLeftElement;
exports.InputRightAddon = InputRightAddon;
exports.InputRightElement = InputRightElement;
exports.Modal = Modal;
exports.ModalProvider = ModalProvider;
exports.PadlockIcon = PadlockIcon;
exports.PlusCircleIcon = PlusCircleIcon;
exports.PrivateIcon = PrivateIcon;
exports.PseudoBox = PseudoBox;
exports.RequiredIndicator = RequiredIndicator;
exports.ScopedCSSReset = ScopedCSSReset;
exports.Spinner = Spinner;
exports.Stack = Stack;
exports.StyledBox = StyledBox;
exports.Text = Text;
exports.ThemeContext = ThemeContext;
exports.ThemeProvider = ThemeProvider;
exports.UnionLineIcon = UnionLineIcon;
exports.VisuallyHidden = VisuallyHidden;
exports.systemProps = systemProps;
exports.theme = theme;
exports.useClipboard = useClipboard;
exports.useFormControl = useFormControl;
exports.useFormControlContext = useFormControlContext;
exports.useModalState = useModalState;
exports.useTheme = useTheme;
//# sourceMappingURL=ui.cjs.development.js.map
